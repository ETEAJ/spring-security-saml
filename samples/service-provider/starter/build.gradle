/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.12")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'io.spring.javaformat'
apply plugin: "org.springframework.boot"
apply plugin: 'checkstyle'

checkstyle {
	toolVersion = "8.18"
}


dependencies {

	//---Workaround For Incorrectly Included servlet-api.jar --
	//---https://stackoverflow.com/questions/54685733/spring-sleuth-getting-exception-for-post-requests/55927112#55927112
	provided "org.apache.tomcat:tomcat-servlet-api:9.0.19"

	//---Spring Security Core--
	compile "org.springframework.security:spring-security-core:$springSecurityVersion"
	compile "org.springframework.security:spring-security-config:$springSecurityVersion"

	compile("org.opensaml:opensaml-core:$openSamlVersion")
	compile("org.opensaml:opensaml-saml-api:$openSamlVersion")
	compile("org.opensaml:opensaml-saml-impl:$openSamlVersion")

	//---Override Dependencies
	compile "org.bouncycastle:bcprov-jdk15on:$bcprovVersion"
	compile "org.bouncycastle:bcpkix-jdk15on:$bcprovVersion"
	compile "joda-time:joda-time:$jodaTimeVersion"
	compile "org.apache.httpcomponents:httpclient:$httpClientVersion"
	compile "commons-logging:commons-logging:$commonsLoggingVersion"

	//---Spring Security Servlet --
	compile "org.springframework:spring-web:$springVersion"
	compile "org.springframework.security:spring-security-web:$springSecurityVersion"

	//---Boot --
	compile ("org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion") {
		exclude group: "ch.qos.logback", module: "logback-classic"
	}
	compile ("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
		exclude group: "ch.qos.logback", module: "logback-classic"
	}
	compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity5:$thymeleafExtrasSpringSecurityVersion"

	//---Logging --
	compile "org.slf4j:slf4j-log4j12:$slf4jVersion"


	testCompile ("org.springframework:spring-test:$springVersion") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	testCompile "commons-logging:commons-logging:$commonsLoggingVersion"
	testCompile ("org.springframework:spring-test:$springVersion") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	testCompile "org.xmlunit:xmlunit-core:2.5.1"
	testCompile "org.hamcrest:hamcrest-library:1.3"
	testCompile "org.mockito:mockito-core:${mockitoVersion}"
	testCompile ("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
		exclude group: "ch.qos.logback", module: "logback-classic"
	}
	testCompile "org.springframework.security:spring-security-test:$springSecurityVersion"

	//--- Java Checkstyle
	checkstyle("io.spring.javaformat:spring-javaformat-checkstyle:0.0.12")


}
